{"version":3,"sources":["api/api.ts","components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","components/LoadingError/LoadingError.tsx","App.tsx","index.tsx"],"names":["request","url","fetch","then","response","ok","json","Promise","reject","Error","TodoList","todos","selectedUserId","selectUser","className","map","todo","classNames","completed","htmlFor","id","type","checked","readOnly","title","userId","onClick","CurrentUser","state","user","this","loadDataUser","prevProps","props","setState","catch","clearUser","name","email","phone","React","Component","LoadingError","error","App","hasLoadingError","query","completionStatus","handelChange","event","target","value","handleChangeSelect","randomize","i","length","j","Math","floor","random","temp","handleRandomize","foundTodos","filter","toLowerCase","includes","visibleTodos","placeholder","onChange","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e30e1992.chunk.js","sourcesContent":["const BASE_URL = 'https://mate.academy/students-api';\n\nfunction request(url: string) {\n  return fetch(`${BASE_URL}${url}`)\n    .then(response => {\n      if (!response.ok) {\n        return Promise.reject(new Error());\n      }\n\n      return response.json();\n    });\n}\n\nexport const getTodos = (): Promise<Todo[]> => request('/todos');\nexport const getUser = (id: number):Promise<User> => request(`/users/${id}`);\n","import React from 'react';\nimport './TodoList.scss';\nimport classNames from 'classnames';\n\ntype Props = {\n  todos: Todo[],\n  selectedUserId: number,\n  selectUser:(selectedUserId: number) => void\n};\n\nexport const TodoList: React.FC<Props> = ({ todos, selectedUserId, selectUser }) => (\n\n  <div className=\"TodoList\">\n    <h2>Todos:</h2>\n\n    <div className=\"TodoList__list-container\">\n      <ul className=\"TodoList__list\">\n        {todos.map(todo => (\n          <li\n            key={todo.id}\n            className={classNames(\n              'TodoList__item',\n              { 'TodoList__item--checked': todo.completed },\n              { 'TodoList__item--unchecked': !todo.completed },\n            )}\n          >\n            <label htmlFor=\"checkbox\">\n              <input\n                id=\"checkbox\"\n                type=\"checkbox\"\n                checked={todo.completed}\n                readOnly\n              />\n              <p>{todo.title}</p>\n            </label>\n\n            <button\n              className={classNames(\n                'TodoList__user-button', 'button',\n                { 'TodoList__user-button--selected': todo.userId === selectedUserId },\n              )}\n              type=\"button\"\n              onClick={() => {\n                selectUser(todo.userId);\n              }}\n            >\n              User\n              #\n              {todo.userId}\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  </div>\n);\n","import React from 'react';\nimport './CurrentUser.scss';\nimport { getUser } from '../../api/api';\n\ninterface State {\n  user: User | null;\n}\n\ntype Props = {\n  selectedUserId: number,\n  clearUser:() => void\n};\n\nexport class CurrentUser extends React.Component<Props, State> {\n  state: State = {\n    user: null,\n  };\n\n  componentDidMount() {\n    this.loadDataUser();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.selectedUserId !== this.props.selectedUserId) {\n      this.loadDataUser();\n    }\n  }\n\n  loadDataUser() {\n    getUser(this.props.selectedUserId)\n      .then(user => {\n        this.setState({ user });\n      })\n      .catch(() => {\n        this.setState({ user: null });\n      });\n  }\n\n  render() {\n    const { user } = this.state;\n    const { clearUser } = this.props;\n\n    if (!user) {\n      return (\n        <div className=\"error\">\n          an error occurred when loading user\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"CurrentUser\">\n        <button\n          className=\"CurrentUser__button\"\n          type=\"button\"\n          onClick={() => clearUser()}\n        >\n          Clear\n        </button>\n        <h2 className=\"CurrentUser__title\">\n          <span>\n            Selected user: #\n            {user.id}\n          </span>\n        </h2>\n        <h3 className=\"CurrentUser__name\">{user.name}</h3>\n        <p className=\"CurrentUser__email\">{user.email}</p>\n        <p className=\"CurrentUser__phone\">{user.phone}</p>\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\ntype Props = {\n  error: string,\n};\n\nexport const LoadingError: React.FC<Props> = ({ error }) => (\n  <div className=\"error\">\n    {error}\n  </div>\n);\n","import React from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { getTodos } from './api/api';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { LoadingError } from './components/LoadingError';\n\ninterface State {\n  selectedUserId: number;\n  todos: Todo[];\n  hasLoadingError: boolean;\n  error: string;\n  query: string;\n  completionStatus: string;\n}\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    selectedUserId: 0,\n    todos: [],\n    hasLoadingError: false,\n    error: '',\n    query: '',\n    completionStatus: 'all',\n  };\n\n  componentDidMount() {\n    getTodos()\n      .then(todos => {\n        this.setState({ todos, hasLoadingError: false, error: '' });\n      })\n      .catch(() => {\n        this.setState({ hasLoadingError: true, error: 'an error occurred when loading todos' });\n      });\n  }\n\n  selectUser = (selectedUserId: number) => {\n    this.setState({ selectedUserId });\n  };\n\n  clearUser = () => {\n    this.setState({ selectedUserId: 0 });\n  };\n\n  handelChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    this.setState({ query: event.target.value });\n  };\n\n  handleChangeSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    this.setState({ completionStatus: event.target.value });\n  };\n\n  randomize = (todos: Todo[]) => {\n    for (let i = todos.length - 1; i > 0; i -= 1) {\n      const j = Math.floor(Math.random() * (i + 1));\n      const temp = todos[i];\n\n      // eslint-disable-next-line no-param-reassign\n      todos[i] = todos[j];\n      // eslint-disable-next-line no-param-reassign\n      todos[j] = temp;\n    }\n\n    return todos;\n  };\n\n  handleRandomize = () => {\n    this.setState((state) => ({\n      todos: this.randomize(state.todos),\n    }));\n  };\n\n  render() {\n    const {\n      selectedUserId, todos, hasLoadingError, error, query, completionStatus,\n    } = this.state;\n\n    const foundTodos = (query !== '')\n      ? todos.filter(\n        todo => todo.title.toLowerCase().includes(query.toLowerCase()),\n      )\n      : todos;\n\n    let visibleTodos = (completionStatus === 'active')\n      ? foundTodos.filter(todo => todo.completed === true)\n      : foundTodos.filter(todo => todo.completed === false);\n\n    if (completionStatus === 'all') {\n      visibleTodos = foundTodos;\n    }\n\n    return (\n      <div className=\"App\">\n        <div className=\"App__sidebar\">\n          { hasLoadingError\n            ? (\n              <LoadingError error={error} />\n            )\n            : (\n              <>\n                <div className=\"App__buttons\">\n                  <input\n                    type=\"text\"\n                    className=\"App__button button-input\"\n                    placeholder=\"Enter the title of the todo\"\n                    value={query}\n                    onChange={this.handelChange}\n                  />\n\n                  <select\n                    name=\"completionStatus\"\n                    className=\"App__button button-select\"\n                    value={completionStatus}\n                    onChange={this.handleChangeSelect}\n                  >\n                    <option value=\"all\">all</option>\n                    <option value=\"active\">active</option>\n                    <option value=\"completed\">completed</option>\n                  </select>\n\n                  <button\n                    type=\"button\"\n                    className=\"App__button button-random\"\n                    onClick={() => this.handleRandomize()}\n                  >\n                    Randomize\n                  </button>\n\n                </div>\n                <TodoList\n                  todos={visibleTodos}\n                  selectedUserId={selectedUserId}\n                  selectUser={this.selectUser}\n                />\n              </>\n            )}\n        </div>\n\n        <div className=\"App__content\">\n          <div className=\"App__content-container\">\n            {selectedUserId ? (\n              <CurrentUser\n                selectedUserId={selectedUserId}\n                clearUser={this.clearUser}\n              />\n            ) : 'No user selected'}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}